install.packages(c("boot", "mgcv", "nlme", "nnet"))
library(ggplot2)
install.packages
install.packages("ggplot2")
library(ggplot2)
view(diamonds)
View(diamonds)
network_df2 <- read.csv("~/git/vax-sentiment/jupyter_nbs/network_df2")
View(network_df2)
source('~/rstudio/scratch.R', echo=TRUE)
ggplot(data = diamonds) + geom_desnity(aes(x = price), fill = 'red')
ggplot(data = diamonds) + geom_density(aes(x = price), fill = 'red')
ggplot(data = diamonds, mapping = aes(x = cut, y = price)) + geom_boxplot()
+ facet_grid(color ~ clarity)
ggplot(data = diamonds, mapping = aes(x = cut, y = price)) + geom_boxplot() + facet_grid(color ~ clarity)
ggplot(data = diamonds, mapping = aes(x = cut, y = price)) + geom_boxplot() + facet_wrap(~color)
ggplot(data = diamonds, mapping = aes(x = cut, y = price)) + geom_violin()
ggplot(data = diamonds, mapping = aes(y = price, x = carat)) + gemo_point()
ggplot(data = diamonds, mapping = aes(y = price, x = carat)) + geom_point()
geom_point(alpha=0.2)
ggplot(data = diamonds, mapping = aes(y = price, x = carat, color = color, size=price)) +
geom_point(alpha=0.2)
ggplot(data = diamonds, mapping = aes(y = price, x = carat, color = color, size=price)) +
geom_point(alpha=0.2) + facet_grid(cut ~ clarity)
+ facet_grid(sentiment ~ )
ggplot(data = network_df2, mapping = aes(y = avg.deg.cent, x = avg.bet.cent)) + geom_boxplot() +
facet_wrap(~sentiment)
ggplot(data = diamonds) + geom_histogram(aes(x = price))
ggplot(data = diamonds, mapping = aes(x = cut, y = price)) + geom_boxplot() + facet_grid(color ~ clarity)
ggplot(data = diamonds, mapping = aes(x = cut, y = price)) + geom_boxplot() + facet_wrap(~color)
ggplot(data = diamonds, mapping = aes(y = price, x = carat, color = color, size=price)) +
geom_point(alpha=0.2)
ggplot(data = network_df2, mapping = aes(y = avg.deg.cent, x = avg.bet.cent)) + geom_boxplot()
ggplot(data = network_df2, mapping = aes(y = avg.deg.cent, x = avg.bet.cent)) + geom_boxplot() + facet_wrap(~sentiment)
ggplot(data = network_df2, mapping = aes(y = avg.deg.cent, x = avg.bet.cent, group = sentiment)) + geom_boxplot() + facet_wrap(~sentiment)
ggplot(data = network_df2, mapping = aes(y = avg.deg.cent, x = avg.bet.cent, group = sentiment)) + geom_boxplot()
ggplot(data = network_df2, mapping = aes(y = avg.deg.cent, x = avg.bet.cent, group = sentiment)) + geom_boxplot() + facet_wrap(~sentiment)
ggplot(data = network_df2, mapping = aes(y = avg.bet.cent, x = avg.deg.cent, group = sentiment)) + geom_boxplot() + facet_wrap(~sentiment)
ggplot(data = network_df2, mapping = aes(y = avg.deg.cent, x = avg.bet.cent, group = sentiment)) + geom_boxplot() + facet_wrap(~sentiment)
ggplot(data = network_df2, mapping = aes(y = avg.bet.cent, x = avg.deg.cent, group = sentiment)) + geom_boxplot() + facet_wrap(~sentiment)
ggplot(data = diamonds, mapping = aes(y = avg.bet.cent, x = avg.deg.cent, color = sentiment, size = density)) +
geom_point(alpha=0.2)
ggplot(data = diamonds, mapping = aes(y = avg.bet.cent, x = avg.deg.cent, color = sentiment, size = density)) +
geom_point(alpha=0.2)
ggplot(data = diamonds, mapping = aes(y = avg.bet.cent, x = avg.deg.cent, color = sentiment, size = density)) +
geom_point(alpha=0.2)
ggplot(data = diamonds, mapping = aes(y = avg.bet.cent, x = avg.deg.cent, color = sentiment, size = density)) +
geom_point(alpha=0.2)
ggplot(data = network_df2, mapping = aes(y = avg.bet.cent, x = avg.deg.cent, group = sentiment)) + geom_boxplot() + facet_wrap(~sentiment)
ggplot(data = diamonds, mapping = aes(y = avg.bet.cent, x = avg.deg.cent, color = sentiment, size = density)) + geom_point(alpha=0.2)
ggplot(data = diamonds, mapping = aes(y = avg.bet.cent, x = density, color = sentiment)) + geom_point(alpha=0.2)
ggplot(data = network_df2, mapping = aes(y = avg.bet.cent, x = avg.deg.cent, color = sentiment, size = density)) +
geom_point(alpha=0.2)
ggplot(data = network_df2, mapping = aes(y = avg.bet.cent, x = avg.deg.cent, color = sentiment, size = density)) +
geom_point(alpha=0.5)
ggplot(data = network_df2, mapping = aes(y = avg.bet.cent, x = avg.deg.cent, color = sentiment)) +
geom_point(alpha=0.5)
ggplot(data = network_df2, mapping = aes(y = avg.bet.cent, x = avg.deg.cent, group = sentiment)) + geom_boxplot() + facet_wrap(~sentiment)
ggplot(data = network_df2, mapping = aes(y = avg.deg.cent, x = avg.bet.cent, group = sentiment)) + geom_boxplot() + facet_wrap(~sentiment)
ggplot(data = network_df2, mapping = aes(y = avg.bet.cent, x = avg.deg.cent, group = sentiment)) + geom_boxplot() + facet_wrap(~sentiment)
ggplot(data = diamonds, mapping = aes(x = cut, y = price)) + geom_boxplot() + facet_wrap(~color)
ggplot(data = network_df2, mapping = aes(y = avg.deg.cent, x = sentiment)) + geom_boxplot()
ggplot(data = network_df2, mapping = aes(y = avg.bet.cent, x = sentiment)) + geom_boxplot()
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
g = ggplot(data = network_df2, mapping = aes(y = avg.deg.cent, x = sentiment)) + geom_boxplot()
h = ggplot(data = network_df2, mapping = aes(y = avg.bet.cent, x = sentiment)) + geom_boxplot()
multiplot(g,h)
g = ggplot(data = network_df2, mapping = aes(y = avg.deg.cent, x = sentiment)) + geom_violin()
h = ggplot(data = network_df2, mapping = aes(y = avg.bet.cent, x = sentiment)) + geom_violin()
multiplot(g,h)
g = ggplot(data = network_df2, mapping = aes(y = avg.deg.cent, x = sentiment)) + geom_violin() + geom_point() + jitter()
h = ggplot(data = network_df2, mapping = aes(y = avg.bet.cent, x = sentiment)) + geom_violin()
multiplot(g,h)
g = ggplot(data = network_df2, mapping = aes(y = avg.deg.cent, x = sentiment)) + geom_violin() + geom_point()
g
g = ggplot(data = network_df2, mapping = aes(y = avg.deg.cent, x = sentiment)) + geom_violin() + geom_point()
h = ggplot(data = network_df2, mapping = aes(y = avg.bet.cent, x = sentiment)) + geom_violin()
multiplot(g,h)
g = ggplot(data = network_df2, mapping = aes(y = avg.deg.cent, x = sentiment)) + geom_violin() + geom_point() + geom_jitter()
h = ggplot(data = network_df2, mapping = aes(y = avg.bet.cent, x = sentiment)) + geom_violin()
multiplot(g,h)
ggplot(data = network_df2, mapping = aes(y = avg.bet.cent, x = avg.deg.cent, color = sentiment)) +
geom_point(alpha=0.5)
g = ggplot(data = network_df2, mapping = aes(y = avg.deg.cent, x = sentiment)) + geom_violin() + geom_text() + geom_jitter()
g
g = ggplot(data = network_df2, mapping = aes(y = avg.deg.cent, x = sentiment)) + geom_violin() + geom_text(aes(label=name)) + geom_jitter()
g
setwd("~/git/vax-sentiment")
